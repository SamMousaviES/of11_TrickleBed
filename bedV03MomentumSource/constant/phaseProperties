/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  11
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       dictionary;
    location    "constant";
    object      phaseProperties;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

type basicMultiphaseSystem;

phases (air water solid);

air
{
    type            pureIsothermalPhaseModel;
    diameterModel   isothermal;
    isothermalCoeffs
    {
        d0              3e-3;
        p0              1e5;
    }

    residualAlpha   1e-6;
}

water
{
    type            pureIsothermalPhaseModel;
    diameterModel   constant;
    constantCoeffs
    {
        d               1e-4;
    }

    residualAlpha   1e-6;
}

solid
{
    type            pureStationaryIsothermalPhaseModel;
    diameterModel   constant;
    constantCoeffs
    {
        d               0.0107;
    }

    residualAlpha   1e-6;
}

blending
{
    drag
    {      
	type            linear;
	minFullyContinuousAlpha.air 0.6;
	minPartlyContinuousAlpha.air 0.5;
	minFullyContinuousAlpha.water 0.6;
	minPartlyContinuousAlpha.water 0.5;
	minFullyContinuousAlpha.solid none;
	minPartlyContinuousAlpha.solid none;
    }

    default
    {
        type            linear;
        minFullyContinuousAlpha.air 0.9;
        minPartlyContinuousAlpha.air 0.1;
        minFullyContinuousAlpha.water 0.9;
        minPartlyContinuousAlpha.water 0.1;
        minFullyContinuousAlpha.solid none;
        minPartlyContinuousAlpha.solid none;
    }
}

surfaceTension
{
    air_water
    {
        type            constant;
        sigma           0.073;
    }
}

drag
{
    air_dispersedIn_water
    {
        type            Ergun;
        gas             air;
        liquid          water;
        solid           solid;
        E1              20;
        E2              1.36;
    }

     air_segregatedWith_water
    {
        type            segregated;
        m               0.5;
        n               8;
    }

    water_dispersedIn_air
    {
        type            Ergun;
        gas             air;
        liquid          water;
        solid           solid;
        E1              20;
        E2              1.36;
    }

    air_water_displacedBy_solid
    {
        type            AttouFerschneider;
        gas             air;
        liquid          water;
        solid           solid;
        E1              20;
        E2              4;
    }

    solid_dispersedIn_air
    {
        type            Ergun;
        gas             air;
        liquid          water;
        solid           solid;
        E1              20;
        E2              4;
    }

    solid_dispersedIn_water
    {
        type            Ergun;
        gas             air;
        liquid          water;
        solid           solid;
        E1              20;
        E2              4;
    }

}

virtualMass
{
/*    air_dispersedIn_water
    {
        type            constantCoefficient;
        Cvm             0.5;
    }

    water_dispersedIn_air
    {
        type            constantCoefficient;
        Cvm             0.5;
    }
*/
}

heatTransfer
{}

phaseTransfer
{}

lift
{
     solid_dispersedIn_water
    {
        type            SaffmanMei;
        residualRe      100;
    }
    
     air_dispersedIn_water
    {
        type            SaffmanMei;
        residualRe      100;
    }
    
        air_dispersedIn_water
    {
        type            SaffmanMei;
        residualRe      100;
    }
        water_dispersedIn_air
    {
        type            SaffmanMei;
        residualRe      100;
    }

}

wallLubrication
{}

turbulentDispersion
{}

interfaceCompression
{}

// ************************************************************************* //
